Goal:
Ek fully AI-driven Career Coach jo user ka resume analyze kare, skill gaps identify kare, personalized daily learning planner create kare, daily email bheje, aur AI mock interview conduct kare using voice AI.

Key Features:

Login / Signup + User Profile

Resume Upload & AI Analysis

Skill Gap Detection & Personalized Planner

Daily Email & “Today’s Content” Tab

Progress Tracking

AI Mock Interview (VAPI + ChatGPT)

Downloadable PDF Resources

2️⃣ Tech Stack
Layer	Technology
Frontend	React + Tailwind CSS
Backend	Node.js + Express
Database	MongoDB
AI Services	ChatGPT API (gpt-4o-mini), Gemini API
Voice AI	VAPI (Voice Calling Bot)
Email Notifications	Nodemailer / Resend API
File Storage	AWS S3 (Resumes & PDFs)
PDF Generation	pdfkit / reportlab
Scheduler	node-cron / BullMQ + Redis (for queued tasks)
Deployment	Vercel (Frontend), Render/Railway (Backend + AI Microservice)
3️⃣ Database Design

MongoDB Collections

1. users
Field	Type	Description
_id	ObjectId	Primary Key
name	String	User’s full name
email	String	Unique email
password_hash	String	Hashed password
created_at	Date	Signup timestamp
2. profiles
Field	Type	Description
_id	ObjectId	Primary Key
user_id	ObjectId	FK → users
desired_role	String	e.g., Software Engineer, Data Analyst
weekly_hours	Number	Hours user can dedicate per week
timezone	String	For email scheduling
preferences	Object	e.g., {format: video/article, learning_type: project_based}
3. resumes
Field	Type	Description
_id	ObjectId	Primary Key
user_id	ObjectId	FK → users
s3_url	String	Uploaded resume URL
parsed_json	Object	Skills, experience, education extracted
uploaded_at	Date	Timestamp
4. planners
Field	Type	Description
_id	ObjectId	Primary Key
user_id	ObjectId	FK → users
role	String	Same as desired_role
start_date	Date	Planner start date
end_date	Date	Planner end date
plan_json	Object	Full plan (weeks → days → tasks)
progress_percent	Number	0–100%
5. tasks
Field	Type	Description
_id	ObjectId	Primary Key
planner_id	ObjectId	FK → planners
day_index	Number	Day of the plan
title	String	Task title
description	String	Task description
duration_mins	Number	Estimated minutes
resource_links	Array	URLs (video/article/project)
status	String	pending/completed
6. interviews
Field	Type	Description
_id	ObjectId	Primary Key
user_id	ObjectId	FK → users
planner_id	ObjectId	FK → planners
scheduled_at	Date	When mock interview occurs
status	String	pending/completed
recording_url	String	Stored audio file URL
transcript	String	Speech → Text result
score_json	Object	ChatGPT evaluation + feedback
7. notifications
Field	Type	Description
_id	ObjectId	Primary Key
user_id	ObjectId	FK → users
type	String	daily_plan / interview / reminder
payload	Object	e.g., {tasks: [...], links: [...] }
sent_at	Date	Timestamp
4️⃣ API Endpoints
Auth & User
Method	Endpoint	Body	Description
POST	/api/auth/signup	{name,email,password}	User signup
POST	/api/auth/login	{email,password}	Returns JWT
GET	/api/auth/me	Header: Bearer token	Get current user profile
Resume
Method	Endpoint	Body	Description
POST	/api/resume/upload	multipart/form-data: file	Upload resume to S3
POST	/api/resume/parse	{resumeId}	Call ChatGPT API → analyze resume → store parsed JSON
GET	/api/resume/:id	-	Get parsed resume & skills
Profile
Method	Endpoint	Body	Description
POST	/api/profile	{desired_role, weekly_hours, preferences, timezone}	Create/Update profile
GET	/api/profile	-	Get profile info
Planner
Method	Endpoint	Body	Description
POST	/api/planner/generate	{userId}	Call ChatGPT API → Generate personalized daily plan → store in DB
GET	/api/planner/:id	-	Get full planner + tasks
POST	/api/task/:id/complete	-	Mark task complete → Update progress %
GET	/api/today	-	Get today’s tasks for dashboard + email
Email / Notification
Method	Endpoint	Body	Description
POST	/api/notifications/sendDailyPlan	{userId}	Scheduler → send today’s tasks + PDF
Mock Interview
Method	Endpoint	Body	Description
POST	/api/interview/schedule	{userId, plannerId, datetime}	Trigger VAPI voice call for AI interview
GET	/api/interview/:id/report	-	Fetch transcript + score JSON + feedback PDF
5️⃣ AI Services Mapping
Feature	API	Notes
Resume Analysis	ChatGPT API (gpt-4o-mini)	Parse skills, experience, weak areas
Skill Gap Analysis & Planner	ChatGPT API	Create daily/weekly plan in JSON
Resource Suggestion	Gemini API	Suggest videos, articles, projects for learning
Mock Interview Questions	ChatGPT API	Generate role-specific Q&A
Mock Interview Evaluation	ChatGPT API	Score & feedback based on transcript
Voice Interview	VAPI	Call user, capture audio, stream transcript to ChatGPT API
6️⃣ Daily Email & PDF Workflow

node-cron job triggers daily at user’s timezone → notifications.sendDailyPlan

Fetch today’s tasks from planner → generate HTML → convert to PDF (pdfkit)

Email user → content + PDF + “Go to Today’s Tab” link

7️⃣ Frontend Flow (React)

Login/Signup → Profile Setup

Upload Resume → AI Analysis → Show Skill Gaps

Generate Planner → Show Dashboard

Today Tab → Task List → Mark Complete → PDF Download

Progress Tracker → Unlock Mock Interview

Start Mock Interview → VAPI Call → Transcript + Feedback

8️⃣ Suggested Dev Timeline (4–5 Weeks)
Week	Task
1	Repo setup, Auth, Profile, Resume Upload → S3
2	Integrate ChatGPT API → Resume Analysis + Skill Gap detection
3	Planner Generation → Daily Task JSON → Store in DB
4	Daily Email Scheduler + PDF download, Today Tab UI
5	VAPI Voice Bot + Mock Interview, transcript → ChatGPT evaluation
6	Polishing UI, Deployment (Vercel + Render/Railway), Testing
9️⃣ Resume-Friendly Description

AI Career Coach — End-to-End MERN + AI APIs Product

Built a full-stack AI-driven platform that analyzes resumes, detects skill gaps, generates personalized daily learning plans, sends automated emails, and conducts AI-powered voice mock interviews.

Tech: React, Node.js, MongoDB, ChatGPT API, Gemini API, VAPI, AWS S3, Nodemailer, pdfkit.